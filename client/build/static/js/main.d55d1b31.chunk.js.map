{"version":3,"sources":["components/Adopt/Adopt.js","utils/mutation.js","utils/auth.js","pages/Signup.js","pages/Login.js","components/Navbar/Navbar.js","components/Menu/Menu.js","App.js","index.js"],"names":["Adopt","className","id","CREATE_USER","gql","LOGIN_USER","decode","this","getToken","token","isTokenExpired","exp","Date","now","localStorage","removeItem","getItem","idToken","setItem","window","location","assign","reload","Signup","useState","username","email","password","formState","setFormState","useMutation","addUser","error","data","handleChange","event","target","name","value","handleFormSubmit","a","preventDefault","console","log","variables","Auth","login","to","onSubmit","placeholder","type","onChange","style","cursor","message","Login","props","Navbar","menuOpen","setMenuOpen","href","src","alt","onClick","Menu","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d55d1b31.chunk.js","sourcesContent":["import './adopt.scss'\n\nexport default function Adopt(){\n    return(\n        <div className=\"adopt\" id=\"adopt\">\n            <h1>Adopt page!!</h1>\n        </div>\n    )\n}","import { gql } from '@apollo/client';\n\nexport const CREATE_USER =gql`\nmutation createUser($username:String!, $email:String!, $password:String!){\n    createUser(username:$username, email:$email, password: $password){\n      token\n      __typename\n      \n    }\n  }`;\n\nexport const LOGIN_USER = gql`\nmutation loginUser($email: String!, $password: String!){\n    loginUser(email:$email, password:$password) {\n      token\n      user{\n        username\n      }\n    }\n    \n  }`;\n\nexport const SAVE_PET = gql`\nmutation savePet($PetInput:PetInput!){\n\tsavePet(PetInput:$PetInput){\n    username\n    savedPets{\n      type\n      description\n      petId\n      image\n      link\n      name\n    }\n  }  \n}`;\n\nexport const DELETE_PET = gql`\nmutation deletePet($petId: String!){\n    deletePet(petId: $petId) {\n      username\n      savedPets{\n        _id\n      }\n    }\n    \n  }`;","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    const token = this.getToken();\n    return token && !this.isTokenExpired(token) ? true : false;\n  }\n\n  isTokenExpired(token) {\n    const decoded = decode(token);\n    if (decoded.exp < Date.now() / 1000) {\n      localStorage.removeItem('id_token');\n      return true;\n    }\n    return false;\n  }\n\n  getToken() {\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/');\n  }\n\n  logout() {\n    localStorage.removeItem('id_token');\n    window.location.reload();\n  }\n}\n\nexport default new AuthService();","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useMutation } from '@apollo/client';\nimport { CREATE_USER } from '../utils/mutation';\n\nimport Auth from '../utils/auth';\n\nconst Signup = () => {\n  const [formState, setFormState] = useState({\n    username: '',\n    email: '',\n    password: '',\n  });\n  const [addUser, { error, data }] = useMutation(CREATE_USER);\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n\n    try {\n      const { data } = await addUser({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.addUser.token);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <main className=\"flex-row justify-center mb-4\">\n      <div className=\"col-12 col-lg-10\">\n        <div className=\"card\">\n          <h4 className=\"card-header bg-dark text-light p-2\">Sign Up</h4>\n          <div className=\"card-body\">\n            {data ? (\n              <p>\n                Success! You may now head{' '}\n                <Link to=\"/\">back to the homepage.</Link>\n              </p>\n            ) : (\n              <form onSubmit={handleFormSubmit}>\n                <input\n                  className=\"form-input\"\n                  placeholder=\"Your username\"\n                  name=\"username\"\n                  type=\"text\"\n                  value={formState.name}\n                  onChange={handleChange}\n                />\n                <input\n                  className=\"form-input\"\n                  placeholder=\"Your email\"\n                  name=\"email\"\n                  type=\"email\"\n                  value={formState.email}\n                  onChange={handleChange}\n                />\n                <input\n                  className=\"form-input\"\n                  placeholder=\"******\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={formState.password}\n                  onChange={handleChange}\n                />\n                <button\n                  className=\"btn btn-block btn-primary\"\n                  style={{ cursor: 'pointer' }}\n                  type=\"submit\"\n                >\n                  Submit\n                </button>\n              </form>\n            )}\n\n            {error && (\n              <div className=\"my-3 p-3 bg-danger text-white\">\n                {error.message}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Signup;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport { LOGIN_USER } from '../utils/mutation';\n\nimport Auth from '../utils/auth';\n\nconst Login = (props) => {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error, data }] = useMutation(LOGIN_USER);\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n    try {\n      const { data } = await login({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.login.token);\n    } catch (e) {\n      console.error(e);\n    }\n\n    setFormState({\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <main className=\"flex-row justify-center mb-4\">\n      <div className=\"col-12 col-lg-10\">\n        <div className=\"card\">\n          <h4 className=\"card-header bg-dark text-light p-2\">Login</h4>\n          <div className=\"card-body\">\n            {data ? (\n              <p>\n                Success! You may now head{' '}\n                <Link to=\"/\">back to the homepage.</Link>\n              </p>\n            ) : (\n              <form onSubmit={handleFormSubmit}>\n                <input\n                  className=\"form-input\"\n                  placeholder=\"Your email\"\n                  name=\"email\"\n                  type=\"email\"\n                  value={formState.email}\n                  onChange={handleChange}\n                />\n                <input\n                  className=\"form-input\"\n                  placeholder=\"******\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={formState.password}\n                  onChange={handleChange}\n                />\n                <button\n                  className=\"btn btn-block btn-primary\"\n                  style={{ cursor: 'pointer' }}\n                  type=\"submit\"\n                >\n                  Submit\n                </button>\n              </form>\n            )}\n\n            {error && (\n              <div className=\"my-3 p-3 bg-danger text-white\">\n                {error.message}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Login;\n","import './navbar.scss'\n\nexport default function Navbar({ menuOpen, setMenuOpen }){\n    return (\n        <div className={\"navbar \" + (menuOpen && \"active\")}>\n           <div className=\"wrapper\">\n            <div className=\"left\">\n            <a href=\"#intro\" className=\"logo\">\n                Furever Home <img src='./img/paw.gif' alt=\"Paw\"></img>\n                </a>\n            </div>\n            <div className=\"right\">\n                <div className=\"hamburger\" onClick={()=>setMenuOpen(!menuOpen)}>\n                    <span className=\"line1\"></span>\n                    <span className=\"line2\"></span>\n                    <span className=\"line3\"></span>\n                </div>\n            </div>\n         </div>\n        </div>\n    )\n}","import './menu.scss'\n\nexport default function Menu({ menuOpen, setMenuOpen }){\n    return (\n        <div className={'menu ' + (menuOpen && 'active')}>\n            <ul>\n                <li onClick={()=>setMenuOpen(false)}>\n                    <a href=\"#adopt\">Adopt</a>\n                </li>\n                <li onClick={()=>setMenuOpen(false)}>\n                    <a href=\"#login\">Log In</a>\n                </li>\n                <li onClick={()=>setMenuOpen(false)}>\n                    <a href=\"#signup\">Sign In</a>\n                </li>\n            </ul>\n        </div>\n    )\n}","import React from 'react';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { useState } from 'react';\n\nimport Adopt from './components/Adopt/Adopt';\nimport Signup from './pages/Signup';\nimport Login from './pages/Login';\nimport Navbar from \"./components/Navbar/Navbar\"\nimport Menu from './components/Menu/Menu'\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  const [menuOpen, setMenuOpen] = useState(false);\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        < Navbar />\n        <Navbar menuOpen={menuOpen} setMenuOpen={setMenuOpen}/>\n    <Menu menuOpen={menuOpen} setMenuOpen={setMenuOpen}/>\n    <Menu />\n        <div className=\"flex-column justify-flex-start min-100-vh\">\n          <div className=\"container\">\n            <Route exact path=\"/\">\n              <Adopt />\n            </Route>\n            <Route exact path=\"/login\">\n              <Login />\n            </Route>\n            <Route exact path=\"/signup\">\n              <Signup />\n            </Route>\n          </div> \n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}